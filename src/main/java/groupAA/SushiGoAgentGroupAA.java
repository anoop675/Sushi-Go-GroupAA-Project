package groupAA;

import core.AbstractGameState;
import core.AbstractPlayer;

public class SushiGoAgentGroupAA extends AbstractPlayer {
  
  public SushiGoAgentGroupAA() {
        this(System.currentTimeMillis()); //system's current time
  }
  
  public SushiGoAgentGroupAA(long randomSeed) {
      //calling AbstractPlayer (super class) args constructor
      super(new SushiGoAgentGroupAAParams(), "GroupAA MCTS Agent"); //TODO: Create MyAgentGroupAAParams class to set params for this agent 
      parameters.setRandomSeed(randomSeed); //
      randomSeed = new Random(randomSeed);

      // TODO: Experiment and define parameter values for our MCTS
      SushiGoAgentGroupAAParams params = getParameters();
      params.K = Math.sqrt(/*TODO*/);
      params.rolloutLength = /*TODO*/;
      params.maxTreeDepth = /*TODO*/;
      params.epsilon = /*TODO*/;
      
  }

  @Override
  public AbstractAction _getAction(AbstractGameState gameState, List<AbstractAction> actions) {
    //TODO: return best action generated by MCTS
  }

  @Override
  public SushiGoAgentGroupAAParams getParameters() {
    //TODO: return the parameter values for the MCTS
  }

  @Override
  public String toString() {
    return "GroupAA MCTS Agent";
  }

  @Override
  public SushiGoAgentGroupAAParams copy() {
    SushiGoAgentGroupAAParams parametersCopy = (SushiGoAgentGroupAAParams) parameters.copy();
    SushiGoAgentGroupAA agentCopy = new SushiGoAgentGroupAA(parametersCopy);
    return agentCopy;
  }
